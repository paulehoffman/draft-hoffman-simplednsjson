<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-hoffman-simplednsjson" category="std">

  <front>
    <title abbrev="Simple DNS in JSON">Simple DNS Queries and Responses in JSON</title>

    <author initials="P." surname="Hoffman" fullname="Paul Hoffman">
      <organization>ICANN</organization>
      <address>
        <email>paul.hoffman@icann.org</email>
      </address>
    </author>

    <date year="2017" month="June" day="05"/>

    <area>Art</area>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This document describes a JSON-based format for simple DNS queries
and responses. In this case, “simple” means “only useful for
getting A and AAAA records”. This document also defines the
application/simpledns+json media type. The primary use case of this
format is programs that do not want to take on the programmatic
overhead needed to use messages in the
application/dns-udpwireformat media type.</t>

<t>[ This paragraph is to be removed when this document is published as an RFC ]
Comments on this draft can be sent to the DNS over HTTP mailing list at
<eref target="https://www.ietf.org/mailman/listinfo/dnsoverhttp">https://www.ietf.org/mailman/listinfo/dnsoverhttp</eref>.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>This document also defines the application/simpledns+json media
type. The data format in this media type allows clients to ask for
the DNS <xref target="RFC1035"/> address records (A and AAAA records) for a
domain name, and get back just the basic answer information. The
contents of the message are in JSON <xref target="RFC7159"/>.</t>

<t>The primary use case of this format is programs that do not want to
take on the programmatic overhead needed to use messages in the
application/dns-udpwireformat media type. Data in
application/simpledns+json is a JSON object with very few members
in the query or in the response, whereas using the
application/dns-udpwireformat requires a program to be able to
assemble and disassemble full DNS messages. Queries using
application/simpledns+json only let the program ask for IP address,
while queries using application/dns-udpwireformat allow any asking
for any DNS data type, and using any DNS extension.</t>

<t>The application/simpledns+json format is expected to be useful in
HTTP, such as the protocol described in
<xref target="I-D.hoffman-dns-over-https"/>.</t>

<section anchor="terminology" title="Terminology">

<t>In this document, the key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”,
“SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”, and “OPTIONAL” are to be interpreted as
described in BCP 14, RFC 2119 <xref target="RFC2119"/>.</t>

</section>
</section>
<section anchor="using-the-simple-json-dns-query-format-in-http" title="Using the Simple JSON DNS Query Format in HTTP">

<t>When used in HTTP or similar protocols, the media type
for carrying the data described here is “application/simpledns+json”.
The body of the query, and the contents of the response, are JSON objects.
The definition of those objects is given here, but the query and
response objects MAY have other elements that are either defined later
or are based on local implementation decisions.</t>

</section>
<section anchor="queries" title="Queries">

<t>The structure of a query is:</t>

<figure><artwork><![CDATA[
{ "name": str,
  "type": str
}
]]></artwork></figure>

<t>The “name” member MUST be present in queries. The “type” member is optional in queries.</t>

<t>The name is given as a host name; IDNs <xref target="RFC5890"/> are expressed in Punycode <xref target="RFC3492"/>.</t>

<t>The type is given as a string, and one of the following three values MUST be used:
“A”, “AAAA”, and “A-and-AAAA”. If the “type” member is not
included, a server treats the query as if it was for “A-and-AAAA”.</t>

</section>
<section anchor="responses" title="Responses">

<t>The structure of a response is:</t>

<figure><artwork><![CDATA[
{ "code": int,
  "v4": [ zero or more addresses as strs ],
  "v6": [ zero or more addresses as strs ]
}
]]></artwork></figure>

<t>The “code” member MUST be present in responses. The “v4” and “v6” members are optional in responses.</t>

<t>The value for “code” MUST be one of the following:</t>

<t><list style="hanging">
  <t hangText='0:'>
  The name exists. This does not mean that A or AAAA records exist, just that the name
exists. This code can be treated similarly to a NOERROR response in DNS.</t>
  <t hangText='1:'>
  The name does not exist.
This code can be treated similarly to a NXDOMAIN response in DNS.</t>
  <t hangText='2:'>
  Service failure.
This code can be treated similarly to a SERVFAIL response in DNS.</t>
</list></t>

<t>If they are included, the “v4” and “v6” members MUST each contain a list
of strings, with each string representing a single address.</t>

</section>
<section anchor="example" title="Example">

<t>For example, assume a DNS API server is following this specification
on origin https://dnsserver.example.net/ and the well-known path.
The examples uses HTTP/2 formatting from <xref target="RFC7540"/>.</t>

<t>A query for the IN A records for “www.example.com” with recursion
turned on using the GET method with the wireformat would be:</t>

<figure><artwork><![CDATA[
:method = GET
:scheme = https
:authority = dnsserver.example.net
:path = /.well-known/dns-query?
        content-type=application/simpledns+json&  (no CR)
        { "name": "www.example.com", "type": "A" }
accept = application/simpledns+json
]]></artwork></figure>

<t>[[ Does anything in that preceding example need to be escaped
or quoted? ]]</t>

<t>The response might be:</t>

<figure><artwork><![CDATA[
:status = 200
content-type = application/simpledns+json
content-length = 34
cache-control = max-age=128

{"code":0, "v4":["93.184.216.34"]}

]]></artwork></figure>

</section>
<section anchor="iana" title="IANA Considerations">

<section anchor="registration-of-applicationsimplednsjson-media-type" title="Registration of application/simpledns+json Media Type">

<figure><artwork><![CDATA[
To: ietf-types@iana.org
Subject: Registration of MIME media type application/simpledns+json

MIME media type name: application

MIME subtype name: simpledns+json

Required parameters: n/a

Optional parameters: n/a

Encoding considerations: This is a binary format. The contents are
JSON {{RFC7159}}. (Note that {{RFC7159}} states that JSON is a
binary format.)

Security considerations:  See {{RFC7159}}, Section 12.

Interoperability considerations:  None.

Published specification:  This document.

Applications that use this media type: Systems that want to
exchange short DNS queries and limited DNS responses.

Additional information:

Magic number(s):  n/a

File extension(s):  n/a

Macintosh file type code(s):  n/a

Person & email address to contact for further information:
Paul Hoffman, paul.hoffman@icann.org

Intended usage:  COMMON

Restrictions on usage:  n/a

Author:  Paul Hoffman, paul.hoffman@icann.org

Change controller:  IESG
]]></artwork></figure>

</section>
</section>
<section anchor="Security" title="Security Considerations">

<t>All security considerations from <xref target="RFC7159"/> apply here.</t>

</section>
<section anchor="acknowledgments" title="Acknowledgments">

<t>Patrick McManus inspired the creation of this document.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC1035" target='http://www.rfc-editor.org/info/rfc1035'>
<front>
<title>Domain names - implementation and specification</title>
<author initials='P.V.' surname='Mockapetris' fullname='P.V. Mockapetris'><organization /></author>
<date year='1987' month='November' />
<abstract><t>This RFC is the revised specification of the protocol and format used in the implementation of the Domain Name System.  It obsoletes RFC-883. This memo documents the details of the domain name client - server communication.</t></abstract>
</front>
<seriesInfo name='STD' value='13'/>
<seriesInfo name='RFC' value='1035'/>
<seriesInfo name='DOI' value='10.17487/RFC1035'/>
</reference>



<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3492" target='http://www.rfc-editor.org/info/rfc3492'>
<front>
<title>Punycode: A Bootstring encoding of Unicode for Internationalized Domain Names in Applications (IDNA)</title>
<author initials='A.' surname='Costello' fullname='A. Costello'><organization /></author>
<date year='2003' month='March' />
<abstract><t>Punycode is a simple and efficient transfer encoding syntax designed for use with Internationalized Domain Names in Applications (IDNA).  It uniquely and reversibly transforms a Unicode string into an ASCII string.  ASCII characters in the Unicode string are represented literally, and non-ASCII characters are represented by ASCII characters that are allowed in host name labels (letters, digits, and hyphens). This document defines a general algorithm called Bootstring that allows a string of basic code points to uniquely represent any string of code points drawn from a larger set.  Punycode is an instance of Bootstring that uses particular parameter values specified by this document, appropriate for IDNA.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='3492'/>
<seriesInfo name='DOI' value='10.17487/RFC3492'/>
</reference>



<reference  anchor="RFC5890" target='http://www.rfc-editor.org/info/rfc5890'>
<front>
<title>Internationalized Domain Names for Applications (IDNA): Definitions and Document Framework</title>
<author initials='J.' surname='Klensin' fullname='J. Klensin'><organization /></author>
<date year='2010' month='August' />
<abstract><t>This document is one of a collection that, together, describe the protocol and usage context for a revision of Internationalized Domain Names for Applications (IDNA), superseding the earlier version.  It describes the document collection and provides definitions and other material that are common to the set.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5890'/>
<seriesInfo name='DOI' value='10.17487/RFC5890'/>
</reference>



<reference  anchor="RFC7159" target='http://www.rfc-editor.org/info/rfc7159'>
<front>
<title>The JavaScript Object Notation (JSON) Data Interchange Format</title>
<author initials='T.' surname='Bray' fullname='T. Bray' role='editor'><organization /></author>
<date year='2014' month='March' />
<abstract><t>JavaScript Object Notation (JSON) is a lightweight, text-based, language-independent data interchange format.  It was derived from the ECMAScript Programming Language Standard.  JSON defines a small set of formatting rules for the portable representation of structured data.</t><t>This document removes inconsistencies with other specifications of JSON, repairs specification errors, and offers experience-based interoperability guidance.</t></abstract>
</front>
<seriesInfo name='RFC' value='7159'/>
<seriesInfo name='DOI' value='10.17487/RFC7159'/>
</reference>




    </references>

    <references title='Informative References'>





<reference anchor="I-D.hoffman-dns-over-https">
<front>
<title>DNS Queries over HTTPS</title>

<author initials='P' surname='Hoffman' fullname='Paul Hoffman'>
    <organization />
</author>

<author initials='P' surname='McManus' fullname='Patrick McManus'>
    <organization />
</author>

<date month='May' day='3' year='2017' />

<abstract><t>DNS queries sometimes experience problems with end to end connectivity at times and places where HTTPS flows freely.  HTTPS provides the most practical mechanism for reliable end to end communication.  Its use of TLS provides integrity and confidentiality guarantees and its use of HTTP allows it to interoperate with proxies, firewalls, and authentication systems where required for transit.  This document describes how to run DNS service over HTTP using https:// URIs.  [ This paragraph is to be removed when this document is published as an RFC ] Comments on this draft can be sent to the DNS over HTTP mailing list at https://www.ietf.org/mailman/listinfo/dnsoverhttp .</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-hoffman-dns-over-https-00' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-hoffman-dns-over-https-00.txt' />
</reference>



<reference  anchor="RFC7540" target='http://www.rfc-editor.org/info/rfc7540'>
<front>
<title>Hypertext Transfer Protocol Version 2 (HTTP/2)</title>
<author initials='M.' surname='Belshe' fullname='M. Belshe'><organization /></author>
<author initials='R.' surname='Peon' fullname='R. Peon'><organization /></author>
<author initials='M.' surname='Thomson' fullname='M. Thomson' role='editor'><organization /></author>
<date year='2015' month='May' />
<abstract><t>This specification describes an optimized expression of the semantics of the Hypertext Transfer Protocol (HTTP), referred to as HTTP version 2 (HTTP/2).  HTTP/2 enables a more efficient use of network resources and a reduced perception of latency by introducing header field compression and allowing multiple concurrent exchanges on the same connection.  It also introduces unsolicited push of representations from servers to clients.</t><t>This specification is an alternative to, but does not obsolete, the HTTP/1.1 message syntax.  HTTP's existing semantics remain unchanged.</t></abstract>
</front>
<seriesInfo name='RFC' value='7540'/>
<seriesInfo name='DOI' value='10.17487/RFC7540'/>
</reference>




    </references>



  </back>

<!-- ##markdown-source:
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

-->

</rfc>

